// Code generated by protoc-gen-go. DO NOT EDIT.
// source: postgres.proto

package orbitpsql_pb

import (
	"Orbit-Service/lib/postgres"
	proto "github.com/golang/protobuf/proto"
)
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DBCallRequest struct {
	Payload              string   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DBCallRequest) Reset()         { *m = DBCallRequest{} }
func (m *DBCallRequest) String() string { return proto.CompactTextString(m) }
func (*DBCallRequest) ProtoMessage()    {}
func (*DBCallRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_postgres_5affbfebb170cbf8, []int{0}
}
func (m *DBCallRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBCallRequest.Unmarshal(m, b)
}
func (m *DBCallRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBCallRequest.Marshal(b, m, deterministic)
}
func (dst *DBCallRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBCallRequest.Merge(dst, src)
}
func (m *DBCallRequest) XXX_Size() int {
	return xxx_messageInfo_DBCallRequest.Size(m)
}
func (m *DBCallRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DBCallRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DBCallRequest proto.InternalMessageInfo

func (m *DBCallRequest) GetPayload() string {
	if m != nil {
		return m.Payload
	}
	return ""
}

type DBCallResponse struct {
	Payload              []byte   `protobuf:"bytes,1,opt,name=payload,proto3" json:"payload,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DBCallResponse) Reset()         { *m = DBCallResponse{} }
func (m *DBCallResponse) String() string { return proto.CompactTextString(m) }
func (*DBCallResponse) ProtoMessage()    {}
func (*DBCallResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_postgres_5affbfebb170cbf8, []int{1}
}
func (m *DBCallResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DBCallResponse.Unmarshal(m, b)
}
func (m *DBCallResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DBCallResponse.Marshal(b, m, deterministic)
}
func (dst *DBCallResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DBCallResponse.Merge(dst, src)
}
func (m *DBCallResponse) XXX_Size() int {
	return xxx_messageInfo_DBCallResponse.Size(m)
}
func (m *DBCallResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DBCallResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DBCallResponse proto.InternalMessageInfo

func (m *DBCallResponse) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func init() {
	proto.RegisterType((*DBCallRequest)(nil), "orbitpsql_pb.DBCallRequest")
	proto.RegisterType((*DBCallResponse)(nil), "orbitpsql_pb.DBCallResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PostGresClient is the client API for PostGres service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PostGresClient interface {
	DBCall(ctx context.Context, in *DBCallRequest, opts ...grpc.CallOption) (*DBCallResponse, error)
}

type postGresClient struct {
	cc *grpc.ClientConn
}

func NewPostGresClient(cc *grpc.ClientConn) PostGresClient {
	return &postGresClient{cc}
}

func (c *postGresClient) DBCall(ctx context.Context, in *DBCallRequest, opts ...grpc.CallOption) (*DBCallResponse, error) {
	out := new(DBCallResponse)
	err := c.cc.Invoke(ctx, "/orbitpsql_pb.PostGres/DBCall", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PostGresServer is the server API for PostGres service.
type PostGresServer interface {
	DBCall(context.Context, *DBCallRequest) (*DBCallResponse, error)
}

func RegisterPostGresServer(s *grpc.Server, srv orbitpsql.OrbitPSQL) {
	s.RegisterService(&_PostGres_serviceDesc, srv)
}

func _PostGres_DBCall_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DBCallRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostGresServer).DBCall(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/orbitpsql_pb.PostGres/DBCall",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostGresServer).DBCall(ctx, req.(*DBCallRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PostGres_serviceDesc = grpc.ServiceDesc{
	ServiceName: "orbitpsql_pb.PostGres",
	HandlerType: (*PostGresServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DBCall",
			Handler:    _PostGres_DBCall_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "postgres.proto",
}

func init() { proto.RegisterFile("postgres.proto", fileDescriptor_postgres_5affbfebb170cbf8) }

var fileDescriptor_postgres_5affbfebb170cbf8 = []byte{
	// 148 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0xc8, 0x2f, 0x2e,
	0x49, 0x2f, 0x4a, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0xc9, 0x2f, 0x4a, 0xca,
	0x2c, 0x29, 0x28, 0x2e, 0xcc, 0x89, 0x2f, 0x48, 0x52, 0xd2, 0xe4, 0xe2, 0x75, 0x71, 0x72, 0x4e,
	0xcc, 0xc9, 0x09, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x11, 0x92, 0xe0, 0x62, 0x2f, 0x48, 0xac,
	0xcc, 0xc9, 0x4f, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0x82, 0x71, 0x95, 0xb4, 0xb8,
	0xf8, 0x60, 0x4a, 0x8b, 0x0b, 0xf2, 0xf3, 0x8a, 0x53, 0xd1, 0xd5, 0xf2, 0xc0, 0xd5, 0x1a, 0x05,
	0x72, 0x71, 0x04, 0xe4, 0x17, 0x97, 0xb8, 0x17, 0xa5, 0x16, 0x0b, 0xb9, 0x72, 0xb1, 0x41, 0xf4,
	0x09, 0x49, 0xeb, 0x21, 0xdb, 0xad, 0x87, 0x62, 0xb1, 0x94, 0x0c, 0x76, 0x49, 0x88, 0x55, 0x4a,
	0x0c, 0x49, 0x6c, 0x60, 0xe7, 0x1b, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0xa1, 0x4a, 0xe6, 0x8f,
	0xd0, 0x00, 0x00, 0x00,
}
